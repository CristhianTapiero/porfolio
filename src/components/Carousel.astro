---
import { Icon } from "astro-icon/components"
const TAGS = {
    NEXT: {
        lang: "Next.js",
        icon: "Next",
        class: "bg-brand-white text-black"
    },
    TAILWIND:{
        lang: "Tailwind CSS",
        icon: "Tailwind",
        class: "bg-[#003159] text-brand-white"
    },
    REACT:{
        lang: "React",
        icon: "React",
        class: "bg-[#003159] text-brand-white"
    },
    JAVASCRIPT:{
        lang: "JavaScript",
        icon: "JavaScript",
        class: "bg-brand-yellow/20 text-brand-white"
    },
    HTML:{
        lang: "HTML",
        icon: "HTML",
        class: "bg-orange-500/20 text-brand-white"
    },
    CSS:{
        lang: "CSS",
        icon: "CSS",
        class: "bg-[#003159] text-brand-white"
    },
    TYPESCRIPT:{
        lang: "TypeScript",
        icon: "TypeScript",
        class: "bg-[#003159] text-brand-white"
    },
    MYSQL:{
        lang: "MySQL",
        icon: "MYSQL",
        class: "bg-brand-white text-black"
    },
    JAVA:{
        lang: "Java",
        icon: "Java",
        class: "bg-brand-white text-black"
    },
    AWS:{
        lang: "AWS",
        icon: "Amazon",
        class: "bg-brand-white text-black"
    },
    GIT:{
        lang: "Git",
        icon: "Git",
        class: "bg-brand-white text-black"
    },
    CHAKRA:{
        lang: "Chakra UI",
        icon: "Chakra",
        class: "bg-brand-white text-black"
    },
    NODE:{
        lang: "Node.js",
        icon: "Node",
        class: "bg-brand-white text-black"
    },
    FIREBASE:{
        lang: "Firebase",
        icon: "Firebase",
        class: "bg-brand-white text-black"
    },
    FRAMER:{
        lang: "Framer Motion",
        icon: "Framer",
        class: "bg-brand-white text-black"
    },
    PLANETSCALE:{
        lang: "PlanetScale",
        icon: "PlanetScale",
        class: "bg-brand-white text-black"
    },
    PRISMA:{
        lang: "Prisma",
        icon: "Prisma",
        class: "bg-brand-white text-black"
    },
    SVELTE:{
        lang: "Svelte",
        icon: "Svelte",
        class: "bg-brand-white text-black"
    },
    VUE:{
        lang: "Vue",
        icon: "Vue",
        class: "bg-brand-white text-black"
    },
    ASTRO:{
        lang: "Astro",
        icon: "AstroIcon",
        class: "bg-brand-white text-black"
    },
    PYTHON:{
        lang: "Python",
        icon: "Python",
        class: "bg-brand-white text-black"
    },
    DART:{
        lang: "Dart",
        icon: "Dart",
        class: "bg-brand-white text-black"
    },
    FLUTTER:{
        lang: "Flutter",
        icon: "Flutter",
        class: "bg-brand-white text-black"
    }
}
const PROJECTS = [
    {
        title: "Weather Mobile App",
        github: 'https://github.com/CristhianTapiero/Weather_Mobile_App',
        tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.TYPESCRIPT,],
        largeImage: "./desktopWeather.webp",
        smallImage: "./mobileWeather.webp",
        description: "Aplicación del clima hecha con React Native y Expo, mediante la cual se evidencia el conocimiento en el uso de API's y el manejo de estados con fetch."
    },
]
---



<div id="indicators-carousel" class="relative w-full max-w-4xl min-h-max self-center" data-carousel="static">
    <!-- Carousel wrapper -->
    <div class="relative h-[30rem] max-sm:h-[35rem] overflow-hidden rounded-xl personal-shadow-large border-2 border-personal-black">
        {
            PROJECTS.map((project) => (
                <div class="hidden duration-700 ease-in-out group" data-carousel-item="active">
                    <div class="relative flex flex-col items-center justify-center w-full h-full bg-center bg-cover" style={`background-image: url(${project.largeImage})`}>
                        <div class="absolute inset-0 z-20 bg-gradient-to-t from-personal-black/60 to-transparent group-hover:from-personal-light-black/80 group-hover:to-personal-light-black/40 transition-all bg-size-200 bg-pos-0 group-hover:bg-pos-100 duration-300"></div>
                        {/* TODO: Add a banner to indicate hover */}
                        <div class="md:translate-y-full group-hover:translate-y-0 transition-transform duration-300 flex relative z-30 flex-col items-center justify-center w-full h-full p-6 text-center gap-y-4">
                            <h2 class="text-3xl font-bold text-white dark:text-gray-100">{project.title}</h2>
                            <p class="mt-4 text-sm text-white dark:text-gray-200 w-4/6 max-sm:w-5/6">{project.description}</p>
                            <div class="flex items-center justify-center space-x-2 mt-2 flex-wrap gap-y-2">
                                {
                                    project.tags.map((tag) => (
                                        <span class={`flex flex-row gap-x-2 bg-personal-white personal-shadow-sm border-2 border-personal-black rounded-full items-center justify-center w-fit px-4 py-1 text-sm max-sm:text-xs`}><Icon name={tag.icon} class="size-4"/> {tag.icon}</span>
                                    ))
                                }
                            </div>
                            <a target="_blank" aria-label="Ir al repositorio con el código del proyecto" href={project.github} class="flex mt-5 flex-row gap-x-2 hover:bg-personal-white/80 bg-personal-white personal-shadow-sm border-2 border-personal-black rounded-full items-center justify-center w-fit px-4 py-2 text-base max-sm:text-xs"> <Icon name={"simple-icons:github"} class={'size-7'}/> Ver en GitHub</a>
                        </div>
                    </div>
                </div>
            ))
        }
    </div>
    <!-- Slider indicators -->
    <div class="absolute z-30 flex -translate-x-1/2 space-x-3 rtl:space-x-reverse bottom-5 left-1/2">
        {
            PROJECTS.map((project, index) => (
                <button type="button" class="w-3 h-3 rounded-full" aria-current="true" aria-label={`Slide ${index + 1}`} data-carousel-slide-to={index}></button>
            ))
        }
    </div>
    <!-- Slider controls -->
     {
        PROJECTS.length > 1 && (
            <button type="button" aria-label="Slide Anterior" class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
                <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
                    <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
                    </svg>
                    <span class="sr-only">Previous</span>
                </span>
            </button>
            <button type="button" aria-label="Siguiente Slide" class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-next>
                <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
                    <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                    </svg>
                    <span class="sr-only">Next</span>
                </span>
            </button>
        )
     }
</div>
